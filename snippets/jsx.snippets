extends js
extends redux
extends html

snippet ireact
	import React from 'react'
snippet ireactcomponent
	import React, { Component } from 'react'
snippet ireactdom
	import ReactDOM from 'react-dom'
snippet reactcomponent
	class ${1:ClassName} extends React.Component {
	  state = {

	  }
	  render() {
	    return (
	      <div>
	        $1
	      </div>
	    )
	  }
	}
snippet component
	import React from 'react'

	const ${1} = (props) => {
	  return(
	    <div>$1</div>
	  )
	}

	export default $1
snippet connectstore
	const mapStateToProps = (state, props) => {
	  return {
	    propname: state.proplocation
	  }
	}

	const mapDispatchToProps = {
	  functionName,
	}

	type Props = OwnProps & StateProps & DispatchProps

	${0}export default connect(mapStateToProps,mapDispatchToProps)(${1})

snippet reducer
	const initState = {
  
	}
  
	const ${1}Reducer = (state = initState, action) => {
	  switch (action.type) {
	    case 'SET_STATE': {
	      return action.data
	    }
	    default: return state
	  }
	}
  
	export const setState = (data) => {
	  const action = {
	    type: 'SET_STATE',
	    data: data
	  }
	  return action
	}
  
	export default $1Reducer
snippet service
	import axios from 'axios'
	const baseUrl = '/api/${1}'

	const getAll = () => {
	  const request = axios.get(baseUrl)
	  return request.then(response => response.data)
	}
	
	export default { getAll }
snippet mongoosemodel
	const mongoose = require('mongoose')
	
	const modelSchema = mongoose.Schema({
	  item: {
	    type: String,
	    required: true,
	    minlength: 2
	  },
	})
	
	modelSchema.set('toJSON', {
	  transform: (document, returnedObject) => {
	    returnedObject.id = returnedObject._id.toString()
	    delete returnedObject._id
	  }
	})
	
	const Model = mongoose.model('Model', modelSchema)

	module.exports = $MT_FILENAME_BASE
  
snippet rdr
	ReactDOM.render(${1}, ${2})
