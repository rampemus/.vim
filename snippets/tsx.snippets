extends ts
extends redux
extends html

snippet ireact
	import React from 'react'${0}
snippet ireactcomponent
	import React, { Component } from 'react'${0}
snippet ireactdom
	import ReactDOM from 'react-dom'${0}
snippet reactcomponent
	class ${1} extends React.Component {
	  constructior(props) {
	      super(props)
	      this.state = {
	        ${2}
	      }
	  }

	  ${3}
	  
	  render() {
	    return (
	      <div>$1${4}</div>
	    )
	  }
	}
	
	export default $1${0}
snippet component
	import React from 'react'

	const ${1}: React.FC = (props) => {
	  return(
	    <div>$1</div>
	  )
	}

	export default $1${0}
snippet connectstore
	interface OwnProps {}
	export interface StateProps {}
	export interface DispatchProps {}

	const mapStateToProps = (state: AppState, props: OwnProps) => {
	  return {
	    propname: state.proplocation
	  }
	}

	const mapDispatchToProps: DispatchProps = {
	  functionName,
	}

	type Props = OwnProps & StateProps & DispatchProps

	${0}export default connect(mapStateToProps,mapDispatchToProps)(${1})
snippet ownprops
	interface OwnProps {
	  ${0}
	}
snippet reducer
	interface $1State {
  
	}
  
	interface $1Action {
	  type: string,,
	  data: $1State
	}
  
	const initState: $1State = {
  
	}
  
	const ${1}Reducer = (state:$1State = initState, action:$1Action) => {
	  switch (action.type) {
	    case 'SET_STATE': {
	      return action.data
	    }
	    default: return state
	  }
	}
  
	export const setState = (data:$1State ) => {
	  const action:$1Action = {
	    type: 'SET_STATE',
	    data: data
	  }
	  return action
	}
  
	export default $1Reducer${0}
snippet service
	import axios from 'axios'
	const baseUrl = '/api/${1}'
  
	const getAll = () => {
	  const request = axios.get(baseUrl)
	  return request.then(response => response.data)
	}
  
	export default { getAll }${0}
snippet mongoosemodel
	const mongoose = require('mongoose')
  
	const modelSchema = mongoose.Schema({
	  item: {
	    type: String,
	    required: true,
	    minlength: 2
	  },
	})
  
	modelSchema.set('toJSON', {
	  transform: (document, returnedObject) => {
	    returnedObject.id = returnedObject._id.toString()
	    delete returnedObject._id
	  }
	})
  
	const Model = mongoose.model('Model', modelSchema)
  
	module.exports = $MT_FILENAME_BASE${0}
snippet rdr
	ReactDOM.render(${1}, ${2})${0}
