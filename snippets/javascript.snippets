# Functions
# prototype
snippet prototype
	${1}.prototype.${2} = function(${3}) {
		${4}
	}${5}
# afunction
snippet asf "async function"
	async function ${1}(${2}) {
		${3}
	}${4}
snippet switch
	switch (${1}) {
		case '${3}':
			${4}
			break
		${5}
		default:
			${2}
	}${6}
snippet try "try { ... } catch(e) { ... }"
	try {
		${3}
	} catch (${1}) {
		${2}
	}${4}
snippet tryfinally "try { ... } catch(e) { ... } finally { ... }"
	try {
		${4}
	} catch (${1}) {
		${2}
	} finally {
		${3}
	}${4}
# throw Error
# Objects
# Object Method
# singleton
# Crockford's object function
snippet obj
	function object(o) {
		function F() {}
		F.prototype = o
		return new F()
	}${1}
# Define single property
# Documentation
# docstring
snippet /**
	/**
	 * ${1}
	 *
	 */
snippet @par
	@param {${1}}
snippet @ret
	@return {${1}} ${2}
# JSON.parse
snippet jsonp
	JSON.parse(${1})
# JSON.stringify
snippet jsons
	JSON.stringify(${1})
# DOM selectors
# Get elements
snippet get
	getElementsBy${1}('${2}')${3}
# Get element
snippet getid
	getElementById('${1}')${2}
# Elements by class
snippet getclass
	${1}.getElementsByClassName('${2}')${3}
snippet cl "console.log"
	console.log(${1})${2}
snippet cd "console.debug"
	console.debug(${1})${2}
snippet ce "console.error"
	console.error(${1})${2}
snippet cw "console.warn"
	console.warn(${1})${2}
snippet ci "console.info"
	console.info(${1})${2}
snippet ct "console.trace"
	console.trace(${1})${2}
snippet ctime "console.time ... console.timeEnd"
	console.time("${1}")
	${3}
	console.timeEnd("${2}")
snippet ctimestamp "console.timeStamp"
	console.timeStamp("${1}")${2}
snippet ca "console.assert"
	console.assert(${1}, ${2})
snippet cclear "console.clear"
	console.clear()
snippet cdir "console.dir"
	console.dir(${1})${2}
snippet cdirx "console.dirxml"
	console.dirxml(${1})${2}
snippet cgroup "console.group"
	console.group("${1}")
	${2}
	console.groupEnd()
snippet cgroupc "console.groupCollapsed"
	console.groupCollapsed("${1}")
	${2}}
	console.groupEnd()
snippet cprof "console.profile"
	console.profile("${1}")
	${2}}
	console.profileEnd()
snippet ctable "console.table"
	console.table(${1}"})${2}
# Misc
# setTimeout function
snippet timeout
	setTimeout(() => {${1}}, 1000)${2}
snippet =>
	const ${1} = (${2}) => {
		${0}}
	}
snippet mongoosemodel
	const mongoose = require('mongoose')
	
	const modelSchema = mongoose.Schema({
		item: {
			type: String,
			required: true,
			minlength: 2
		},
	})
	
	modelSchema.set('toJSON', {
		transform: (document, returnedObject) => {
			returnedObject.id = returnedObject._id.toString()
			delete returnedObject._id
		}
	})
	
	const Model = mongoose.model('Model', modelSchema)

	module.exports = $MT_FILENAME_BASE
