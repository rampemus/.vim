# Functions
# prototype
snippet prototype
	${1}.prototype.${2} = function(${3}) {
	  ${0}
	}
# function
snippet fun "function"
	function ${1}(${2}) {
	  ${0}
	}
# afunction
snippet asf "async function"
	async function ${1}(${2}) {
	  ${0}
	}
snippet switch
	switch (${1}) {
	  case '${3}':
	    ${4}
	    break
	  ${0}
	  default:
	    ${2}
	}
snippet try "try { ... } catch(e) { ... }"
	try {
	  ${0}
	} catch (${1}) {
	  ${2}
	}
snippet tryfinally "try { ... } catch(e) { ... } finally { ... }"
	try {
	  ${0}
	} catch (${1}) {
	  ${2}
	} finally {
	  ${3}
	}
# throw Error
# Objects
# Object Method
# singleton
# Crockford's object function
snippet obj
	function object(o) {
	  function F() {}
	  F.prototype = o
	  return new F()
	}
# Define single property
# Documentation
# docstring
snippet /**
	/**
	 * ${0}
	 *
	 */
snippet @par
	@param {${0}}
snippet @ret
	@return {${1}} ${0}
# JSON.parse
snippet jsonp
	JSON.parse(${0})
# JSON.stringify
snippet jsons
	JSON.stringify(${0})
# DOM selectors
# Get elements
snippet get
	getElementsBy${1}('${0}')
# Get element
snippet getid
	getElementById('${0}')
# Elements by class
snippet getclass
	${1}.getElementsByClassName('${0}')
snippet cl "console.log"
	console.log(${0})
snippet cd "console.debug"
	console.debug(${0})
snippet ce "console.error"
	console.error(${0})
snippet cw "console.warn"
	console.warn(${0})
snippet ci "console.info"
	console.info(${0})
snippet ct "console.trace"
	console.trace(${0})
snippet ctime "console.time ... console.timeEnd"
	console.time("${1}")
	${0}}
	console.timeEnd("$1")
snippet ctimestamp "console.timeStamp"
	console.timeStamp("${1}")
snippet ca "console.assert"
	console.assert(${1}, ${0})
snippet cclear "console.clear"
	console.clear()
snippet cdir "console.dir"
	console.dir(${0})
snippet cdirx "console.dirxml"
	console.dirxml(${1})
snippet cgroup "console.group"
	console.group("${1}")
	${0}}
	console.groupEnd()
snippet cgroupc "console.groupCollapsed"
	console.groupCollapsed("${1}")
	${0}}
	console.groupEnd()
snippet cprof "console.profile"
	console.profile("${1}")
	${0}}
	console.profileEnd()
snippet ctable "console.table"
	console.table(${1}"})
# Misc
# setTimeout function
snippet timeout
	setTimeout(() => {${0}}, 1000)
snippet =>
	const ${1} = (${2}) => {
	  ${0}}
	}
snippet mongoosemodel
	const mongoose = require('mongoose')
	
	const modelSchema = mongoose.Schema({
	  item: {
	    type: String,
	    required: true,
	    minlength: 2
	  },
	})
	
	modelSchema.set('toJSON', {
	  transform: (document, returnedObject) => {
	    returnedObject.id = returnedObject._id.toString()
	    delete returnedObject._id
	  }
	})
	
	const Model = mongoose.model('Model', modelSchema)

	module.exports = $MT_FILENAME_BASE
  
